@model Dz5zad1.Models.ModelBook

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/_LayoutMVC.cshtml";
    IEnumerable<SelectListItem> radio = ViewBag.Radio;
    IEnumerable<SelectListItem> Check = ViewBag.Check;
}

<h2>Редактировать книгу</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="container div_border">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row div_row">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (radio.ToList().Count != 0)
        {
            <div class="row div_row">
                @Html.Label("Выбирите публикацию: ", htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    <div class="rad_check">
                        @foreach (var VARIABLE in radio)
                        {
                            if (VARIABLE.Selected)
                            {
                                <input type="radio" name="RadioCeck" checked="checked" value="@VARIABLE.Value" />@VARIABLE.Text
                            }
                            else
                            {
                                <input type="radio" name="RadioCeck" value="@VARIABLE.Value" />@VARIABLE.Text
                            }
                        }
                    </div>
                    </div>
                </div>
        }
        @if (Check.ToList().Count != 0)
        {
            <div class="row div_row">
                @Html.Label("Выбирите автора(ов): ", htmlAttributes: new { @class = "control-label col-md-5" })
        
                <div class="col-md-7">
                    <div class="rad_check">
                        @foreach (var VARIABLE in Check)
                        {
                            <div class="radio">
                                <label>
                                    @if (VARIABLE.Selected)
                                    {
                                        <input type="checkbox" name="SelectedCeck" checked="checked" value="@VARIABLE.Value" />
                                        @VARIABLE.Text
                                    }
                                    else
                                    {
                                        <input type="checkbox" name="SelectedCeck" value="@VARIABLE.Value" />
                                        @VARIABLE.Text
                                    }

                                </label>
                            </div>
                        }
                    </div>
                    </div>
                </div>
        }
        <div class="row div_row">
            @Html.LabelFor(model => model.PublishDate, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.PublishDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublishDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row div_row">
            @Html.LabelFor(model => model.PageCount, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.PageCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PageCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row div_row">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="row">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value="Изменить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

