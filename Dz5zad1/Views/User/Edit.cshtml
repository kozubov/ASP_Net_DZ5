@model Dz5zad1.Models.ModelUser

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/_LayoutMVC.cshtml";
    List<SelectListItem> list = ViewBag.List;
}

<h2>Редактировать пользователя</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="container div_border">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row div_row">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row div_row">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row div_row">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row div_row">
            @Html.LabelFor(model => model.Passvord, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Passvord, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Passvord, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row div_row">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row div_row">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (list.Count != 0)
        {
            <div class="row div_row">
                @Html.LabelFor(model => model.role, htmlAttributes: new { @class = "control-label col-md-5" })
                <div class="col-md-7">
                    @Html.DropDownListFor(model => model.role,list,  htmlAttributes : new { @class = "form-control" } )
                    
                </div>
            </div>
        }
        <div class="row">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value="Изменить" class="btn btn-default" />
            </div>
        </div>
    </div>
}
